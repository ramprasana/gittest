if(!Array.prototype.indexOf){Array.prototype.indexOf=function(c,d){for(var b=(d||0),a=this.length;
b<a;
b++){if(this[b]===c){return b
}}return -1
}
}if(!window.CQ_Analytics){window.CQ_Analytics={}
}if(typeof CQ_Analytics.TestTarget!=="undefined"){var oldTandT=CQ_Analytics.TestTarget
}CQ_Analytics.TestTarget=new function(){function extractMboxParameters(obj,parent){if(!obj){return
}if("nodeType" in obj){return
}var key,value,parentKey,parentEntry;
if(obj.hasOwnProperty("name")&&obj.hasOwnProperty("value")){for(parentItem in parent){var parentEntry=parent[parentItem];
if(typeof parentEntry==="object"){if(parentEntry.hasOwnProperty("name")&&parentEntry.name=="mbox"){return parent
}}}return parent
}for(key in obj){if(!obj.hasOwnProperty(key)){continue
}var newObj=obj[key];
if(typeof newObj==="object"){var extracted=extractMboxParameters(newObj,obj);
if(extracted){return extracted
}}}}function isEditOrPreview(){var $COOKIE=(document.cookie||"").split(/;\s*/).reduce(function(re,c){var tmp=c.match(/([^=]+)=(.*)/);
if(tmp){re[tmp[1]]=unescape(tmp[2])
}return re
},{});
return(typeof $COOKIE.wcmmode=="undefined"||$COOKIE.wcmmode=="preview"||$COOKIE.wcmmode=="edit")
}function getCookieObject(){var $COOKIE=(document.cookie||"").split(/;\s*/).reduce(function(re,c){var tmp=c.match(/([^=]+)=(.*)/);
if(tmp){re[tmp[1]]=unescape(tmp[2])
}return re
},{});
return $COOKIE
}function pullContent(path){var wcmmode=CQ.shared.HTTP.getParameter(document.location.href,"wcmmode");
if(typeof CQ.WCM!=="undefined"){wcmmode="disabled"
}if(wcmmode&&wcmmode.length>0){path=CQ.shared.HTTP.addParameter(path,"wcmmode",wcmmode)
}var output=CQ.shared.HTTP.get(path);
var isOk=(output&&output.status&&output.status==200);
var hasBody=(output&&output.body&&output.body.length>0);
if(isOk&&hasBody){return output
}else{if(console){console.log("Could not pull resource. Response[status:{},body:{}]",output.status,output.body)
}return null
}}function createEditablesForDefault(container){if(container.parentNode){var editableNodesArray=container.parentNode.getElementsByTagName("cq"),editableNode=editableNodesArray[editableNodesArray.length-1];
var defaultContent=pullContent(editableNode.getAttribute("data-path")+".default.html");
if(defaultContent!==null){var scriptWrapper=document.createElement("div");
scriptWrapper.innerHTML=defaultContent.body;
container.parentNode.replaceChild(scriptWrapper,container);
var scripts=container.getElementsByTagName("script");
for(var i=0;
i<scripts.length;
i++){eval(scripts[i].text)
}}}}return{lateMboxArrivalTimeouts:{},defaults:{},isDebugMode:false,debug:function(message){if(this.isDebugMode){console.log(message)
}},init:function(clientcode){if(window.CQ_Analytics&&window.CQ_Analytics.TestTarget.clientCode){clientcode=CQ_Analytics.TestTarget.clientCode
}else{CQ_Analytics.TestTarget.clientCode=clientcode
}if(clientcode){CQ_Analytics.TestTarget.clientCode=clientcode;
var server=clientcode+".tt.omtrdc.net";
if(typeof mboxVersion=="undefined"){mboxVersion=46;
mboxFactories=new mboxMap();
mboxFactoryDefault=new mboxFactory(server,clientcode,"default")
}if(this.isInSimulationMode()){mboxFactories.each(function(mboxFactoryName){var mboxFactory=mboxFactories.get(mboxFactoryName);
mboxFactory.getUrlBuilder().addParameter("mboxXDomain","disabled")
})
}if(mboxGetPageParameter("mboxDebug")!=null||mboxFactoryDefault.getCookieManager().getCookie("debug")!=null){setTimeout(function(){if(typeof mboxDebugLoaded=="undefined"){alert("Could not load the remote debug.\nPlease check your connection to Adobe Target servers")
}},60*60);
document.write('<script language="Javascript1.2" src="http://admin4.testandtarget.omniture.com/admin/mbox/mbox_debug.jsp?mboxServerHost='+server+"&clientCode="+clientcode+'"><\/script>')
}mboxVizTargetUrl=function(_){if(!mboxFactoryDefault.isEnabled()){return
}var v=mboxFactoryDefault.getUrlBuilder().clone();
v.setBasePath("/m2/"+clientcode+"/viztarget");
v.addParameter("mbox",_);
v.addParameter("mboxId",0);
v.addParameter("mboxCount",mboxFactoryDefault.getMboxes().length()+1);
var pb=new Date();
v.addParameter("mboxTime",pb.getTime()-(pb.getTimezoneOffset()*60000));
v.addParameter("mboxPage",mboxGenerateId());
var c=mboxShiftArray(arguments);
if(c&&c.length>0){v.addParameters(c)
}v.addParameter("mboxDOMLoaded",mboxFactoryDefault.isDomLoaded());
mboxFactoryDefault.setVisitorIdParameters(v);
return v.buildUrl()
}
}},pull:function(path,mboxName){if(CQ_Analytics&&CQ_Analytics.Utils){path=CQ_Analytics.Utils.addSuffixToTeaserUrl(path)
}var wcmmode=CQ.shared.HTTP.getParameter(document.location.href,"wcmmode");
if(typeof CQ.WCM!=="undefined"){wcmmode="disabled"
}if(wcmmode&&wcmmode.length>0){path=CQ.shared.HTTP.addParameter(path,"wcmmode",wcmmode)
}var output=CQ.shared.HTTP.get(path);
var isOk=(output&&output.status&&output.status==200);
var hasBody=(output&&output.body&&output.body.length>0);
var _mboxId=0;
if(isOk&&hasBody){var outputWritten=false,_mboxId=0;
if(typeof mboxName==="undefined"){var caller=arguments.callee.caller;
while(caller){if(caller.arguments.length>0){var mboxParameters=extractMboxParameters(caller.arguments[0]);
if(!mboxParameters){continue
}var i,entry;
for(i=0;
i<mboxParameters.length;
i++){entry=mboxParameters[i];
if("name" in entry&&"value" in entry){if(entry.name==="mbox"){mboxName=entry.value
}else{if(entry.name==="mboxId"){_mboxId=entry.value
}}}}}caller=caller.arguments.callee.caller
}}else{_mboxId=mboxFactoryDefault.get(mboxName).getId()
}var target=document.getElementById("mboxImported-default-"+mboxName+"-"+_mboxId);
if(!target&&_mboxId==0){target=document.getElementById("mboxImported-default-"+mboxName+"-"+(_mboxId+1))
}if(target){while(target.firstChild){target.removeChild(target.firstChild)
}var childDivs=target.getElementsByTagName("div");
if(childDivs.length==1){target=childDivs[0]
}var scriptwrapper=document.createElement("div");
scriptwrapper.innerHTML=output.body;
target.appendChild(scriptwrapper);
var scripts=target.getElementsByTagName("script");
for(var i=0;
i<scripts.length;
i++){eval(scripts[i].text)
}outputWritten=true;
var parentElement=target.parentElement;
if(parentElement){var event=document.createEvent("CustomEvent");
event.initEvent("target-dom-loaded",true,false);
parentElement.dispatchEvent(event)
}}if(!outputWritten){document.write(output.body)
}}else{if(console){console.log("Could not pull resource. Response[status:{},body:{}]",output.status,output.body)
}}},triggerUpdate:function(delay){if(typeof delay=="undefined"){delay=500
}if(!CQ_Analytics.TestTarget.reloadRequested){CQ_Analytics.TestTarget.reloadRequested=true;
setTimeout(function(){CQ_Analytics.TestTarget.forceMboxUpdate();
CQ_Analytics.TestTarget.reloadRequested=false
},delay)
}},registerMboxUpdateCalls:function(){if(window.CQ_Analytics&&window.CQ_Analytics.TestTarget.mappings){CQ_Analytics.TestTarget.debug("[Target][init] Registering Mbox update calls");
CQ_TestTarget={};
var mappedProperties=CQ_Analytics.TestTarget.getMappedProperties();
if(mappedProperties.length>0){CQ_Analytics.TestTarget.registerContextHubListeners();
CQ_Analytics.TestTarget.registerListeners()
}else{var campaignStore=ClientContext.get("campaign");
if(campaignStore&&campaignStore.isCampaignSelected()){return
}CQ_Analytics.TestTarget.callMboxUpdate()
}}},getContextVariable:function(keypath){var value=undefined;
if(window.ContextHub){var contextHubVal=ContextHub.get(keypath)
}if(contextHubVal&&typeof contextHubVal!="object"){value=contextHubVal
}else{value=CQ_Analytics.ClientContext.get(keypath)
}return value
},maxProfileParams:200,callMboxUpdate:function(){if(window.CQ_Analytics&&window.CQ_Analytics.mboxes){for(var i=0;
i<CQ_Analytics.mboxes.length;
i++){var updateArgs=[CQ_Analytics.mboxes[i].name];
var profileParams=0;
if(!CQ_Analytics.mboxes[i].defined){var callParameters=[CQ_Analytics.mboxes[i].id,CQ_Analytics.mboxes[i].name];
mboxDefine.apply(undefined,callParameters.concat(CQ_Analytics.mboxes[i].staticParameters));
CQ_Analytics.mboxes[i].defined=true
}for(var j=0;
j<CQ_Analytics.mboxes[i].mappings.length;
j++){var profileprefix="";
var param=CQ_Analytics.mboxes[i].mappings[j].param;
var keypath="/"+CQ_Analytics.mboxes[i].mappings[j].ccKey.replace(".","/");
if(CQ_Analytics.mboxes[i].isProfile.indexOf(param)>-1){if(CQ_Analytics.TestTarget.maxProfileParams>0&&++profileParams>CQ_Analytics.TestTarget.maxProfileParams){mboxUpdate.apply(this,updateArgs);
updateArgs=[CQ_Analytics.mboxes[i].name];
profileParams=0
}profileprefix="profile."
}updateArgs.push(profileprefix+param+"="+CQ_Analytics.Variables.replaceVariables(CQ_Analytics.TestTarget.getContextVariable(keypath)))
}if(CQ_Analytics.mboxes[i].includeResolvedSegments&&CQ_Analytics.SegmentMgr){var resolvedSegments=CQ_Analytics.SegmentMgr.getResolved();
if(resolvedSegments.length>0){updateArgs.push("profile._cq_.resolvedSegments=|"+CQ_Analytics.SegmentMgr.getResolved().join("|")+"|")
}}var that=this;
(function(args){setTimeout(function(){mboxUpdate.apply(that,args)
},(i>0?100:0))
})(updateArgs)
}}},getMappedSessionstores:function(){var storenames=[];
if(window.CQ_Analytics&&window.CQ_Analytics.mboxes){for(var i=0;
i<CQ_Analytics.mboxes.length;
i++){for(var j=0;
j<CQ_Analytics.mboxes[i].mappings.length;
j++){var mapping=CQ_Analytics.mboxes[i].mappings[j].ccKey;
var tmp=mapping.split(".");
var storename=tmp[0];
var key=tmp[1];
if($CQ.inArray(storename,storenames)<0){storenames.push(storename)
}}}}return storenames
},getMappedProperties:function(){var properties=[];
if(window.CQ_Analytics&&window.CQ_Analytics.TestTarget&&window.CQ_Analytics.TestTarget.mappings){for(var mappedProp in window.CQ_Analytics.TestTarget.mappings){properties.push(mappedProp)
}}return properties
},isInSimulationMode:function(){if(typeof CQ!="undefined"){if(CQ.WCM&&CQ.utils&&CQ.utils.WCM){return CQ.WCM.isPreviewMode()||CQ.utils.WCM.isEditMode()
}}return isEditOrPreview()
},forceMboxUpdate:function(){if(typeof mboxFactoryDefault=="undefined"){return
}if(this.isInSimulationMode()){var campaignStore=ClientContext.get("campaign");
if(campaignStore&&campaignStore.isCampaignSelected()){return
}CQ_Analytics.TestTarget.callMboxUpdate()
}},registeredCHListeners:{},registerContextHubListeners:function(){if(!window.ContextHub){return
}var mappedProperties=CQ_Analytics.TestTarget.getMappedProperties();
var listenKeys=[];
for(var mappingIdx=0;
mappingIdx<mappedProperties.length;
mappingIdx++){var mappedProperty=mappedProperties[mappingIdx];
var storeName=mappedProperty.split(".")[0];
var listenKey="/"+mappedProperty.replace(".","/");
var contextHubStore=ContextHub.get(storeName);
if(contextHubStore&&!CQ_Analytics.TestTarget.registeredCHListeners[storeName]){CQ_Analytics.TestTarget.registeredCHListeners[storeName]=true;
listenKeys.push(listenKey);
CQ_Analytics.TestTarget.debug("[Target][CH] - Listening for updates on "+listenKey+" CH")
}}if(listenKeys.length>0){ContextHub.bind(listenKeys,function successHandler(data){CQ_Analytics.TestTarget.debug("[Target][CH][registerContextHubListeners] All properties available, triggering update!");
CQ_Analytics.TestTarget.callMboxUpdate();
CQ_TestTarget.usedStoresLoaded=true
},function defaultHandler(data){CQ_Analytics.TestTarget.debug("[Target][CH][registerContextHubListeners] Not all properties available, triggering update!");
if(!CQ_TestTarget.usedStoresLoaded){var campaignStore=ClientContext.get("campaign");
if(campaignStore&&campaignStore.isCampaignSelected()){return
}CQ_Analytics.TestTarget.callMboxUpdate()
}},500)
}},registerListeners:function(){var stores=CQ_Analytics.CCM.getStores();
var defaultUpdate=function(){CQ_Analytics.TestTarget.debug("[Target][CC] - Triggering default update!");
CQ_Analytics.TestTarget.triggerUpdate()
};
var defaultUpdateTimerId=setTimeout(defaultUpdate,1000);
var clientContextUpdateListener=function(event,property){var currentStore=this;
if(CQ_Analytics.TestTarget.registeredCHListeners[currentStore.getName()]){CQ_Analytics.TestTarget.debug("[Target][CC] - CH hook already detected for store "+currentStore.getName()+" un-binding listener!");
currentStore.removeListener("update",clientContextUpdateListener);
return
}if(typeof property=="undefined"||(property&&property.match&&property.match("^mouse")!="mouse")){CQ_Analytics.TestTarget.debug("[Target][CC] - Triggering update for store "+currentStore.getName());
CQ_Analytics.TestTarget.triggerUpdate();
clearTimeout(defaultUpdateTimerId)
}};
var listenCHKeys=[];
var mappedProperties=CQ_Analytics.TestTarget.getMappedProperties();
for(var mappingIdx=0;
mappingIdx<mappedProperties.length;
mappingIdx++){var mappedProperty=mappedProperties[mappingIdx];
var storeName=mappedProperty.split(".")[0];
var listenKey="/"+mappedProperty.replace(".","/");
var store=stores[storeName];
if(window.ContextHub&&ContextHub.get(storeName)&&!CQ_Analytics.TestTarget.registeredCHListeners[storeName]){listenCHKeys.push(listenKey);
CQ_Analytics.TestTarget.registeredCHListeners[storeName]=true;
CQ_Analytics.TestTarget.debug("[Target][CH] - Listening for updates on "+listenKey+" property");
continue
}if(CQ_Analytics.TestTarget.registeredCHListeners[storeName]){CQ_Analytics.TestTarget.debug("[Target][CC] - CH already bound for store "+storeName+", not binding ClientContext listener!");
continue
}if(storeName!="mouseposition"&&store&&store.addListener){CQ_Analytics.TestTarget.debug("[Target][CC] - Binding ClientContext listener for store "+storeName);
store.addListener("update",clientContextUpdateListener)
}}if(listenCHKeys.length>0){ContextHub.bind(listenCHKeys,function successHandler(data){CQ_Analytics.TestTarget.debug("[Target][CH][registerListeners] All properties available, triggering update!");
CQ_Analytics.TestTarget.triggerUpdate();
clearTimeout(defaultUpdateTimerId)
},function defaultHandler(data){CQ_Analytics.TestTarget.debug("[Target][CH][registerListeners] Not all properties available, triggering update!");
CQ_Analytics.TestTarget.triggerUpdate();
clearTimeout(defaultUpdateTimerId)
},500)
}},ignoredUpdates:{},ignoreNextUpdate:function(mboxName){CQ_Analytics.TestTarget.ignoredUpdates[mboxName]=true
},addMbox:function(mboxDefinition){var replaced=false,alreadyDefined=false;
if(!CQ_Analytics.mboxes){CQ_Analytics.mboxes=[]
}for(var i=0;
i<CQ_Analytics.mboxes.length;
i++){var mbox=CQ_Analytics.mboxes[i];
if(mbox.id==mboxDefinition.id){CQ_Analytics.mboxes.splice(i,1);
replaced=true;
alreadyDefined=mbox.defined;
break
}}mboxDefinition.defined=alreadyDefined;
CQ_Analytics.mboxes.push(mboxDefinition);
CQ_Analytics.TestTarget.addMappings(mboxDefinition.mappings);
return replaced
},addMappings:function(mappingsJsonArray){if(!CQ_Analytics.TestTarget.mappings){CQ_Analytics.TestTarget.mappings=[]
}for(var idx=0;
idx<mappingsJsonArray.length;
idx++){var mapKey=mappingsJsonArray[idx]["ccKey"];
if(!CQ_Analytics.TestTarget.mappings[mapKey]){CQ_Analytics.TestTarget.mappings[mapKey]={}
}}},hideDefaultMboxContent:function(mboxId){$CQ("#"+mboxId).find("div").css("visibility","hidden")
},showDefaultMboxContent:function(mboxId,mboxName){var defaultContent=$CQ("#"+mboxId);
if(!defaultContent.length){return
}CQ_Analytics.mboxes.map(function(m){if(m.name===mboxName&&!m.defined){var callParameters=[m.id,m.name];
mboxDefine.apply(undefined,callParameters.concat(m.staticParameters));
m.defined=true
}});
mboxFactoryDefault.get(mboxName).show(new mboxOfferDefault());
CQ_Analytics.TestTarget.ignoreNextUpdate(mboxName)
},ignoreLateMboxArrival:function(mboxId,mboxName,timeout){this.clearLateMboxArrivalTimeout(mboxId);
var that=this;
this.lateMboxArrivalTimeouts[mboxId]=setTimeout(function(){that.showDefaultMboxContent(mboxId,mboxName);
that.clearLateMboxArrivalTimeout(mboxId)
},timeout)
},clearLateMboxArrivalTimeout:function(mboxId){if(this.lateMboxArrivalTimeouts[mboxId]){clearTimeout(this.lateMboxArrivalTimeouts[mboxId]);
delete this.lateMboxArrivalTimeouts[mboxId]
}},signalDefaultOffer:function(mboxName){if(typeof this.defaults[mboxName]==="undefined"){if(console){console.log("The default offer path was not found in the internal map for mbox "+mboxName)
}return
}var defaultContentPath=this.defaults[mboxName],_mboxId=mboxFactoryDefault.get(mboxName).getId();
this.pull(defaultContentPath,mboxName,_mboxId)
}}
};
if(typeof oldTandT!=="undefined "){for(var prop in oldTandT){CQ_Analytics.TestTarget[prop]=oldTandT[prop]
}}CQ_Analytics.TestTarget.init();